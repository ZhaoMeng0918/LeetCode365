package com.gerryZhao;

public class Main {
    /**
     * 回溯法【回溯搜索法】
     * 虽然回溯法很难，且不好理解，但是回溯法并不是什么高效的算法。
     * 因为回溯的本质是穷举。
     *
     * 回溯法一般可以解决如下几种问题：
     * 组合问题：N个数里面按一定规则找出k个数的集合
     * 切割问题：一个字符按一定规则有几种切割方式
     * 子集问题：一个N个数的集合里有多少符合条件的子集
     * 排列问题：N个数按一定规则全排列，有几种排列方式
     * 棋盘问题：N皇后，解数独等等
     *
     * 如何理解回溯法：
     * 回溯法解决的问题都是可以抽象为树形结构。
     * 因为回溯法解决的都是在集合中递归查找子集，集合的大小就构成了树的宽度，递归的深度构成了树的深度。
     *
     * 回溯法模板：
     * 1. 回溯函数模板返回值以及参数  void backtracking(参数)
     * 2. 回溯函数终止条件
     * 3. 回溯搜索的遍历过程
     * for(选择: 本层集合中的元素) {
     *     处理结点;
     *     backtracking(路径, 选择列表);
     *     回溯，撤销处理结果;
     * }
     *
     * @param args
     */
    public static void main(String[] args) {
	// write your code here
    }
}
